[{"categories":["R","ggplot2"],"contents":"R语言中最令人喜欢和有用的就是ggplot2这个做统计图表的神器了，Hardley Wickham 也因此而成为R世界的大神。\nHardley写了一本书来介绍整个ggplot2软件包的使用原理和设计思路，而且电子版是开源的，使用了基于RMarkdown标记语言的包blogdown写作，展示了一个系统、优美的R世界。\n可以在线看最新的版本《ggplot2: Elegant Graphics for Data Analysis》\n书中设计了不少的练习，只有做过才能全面理解他的思想。这是个懂教学心理的老师的风格，有点难，也有趣。\n这里列出我做过的练习。RStudio和blogdown，提供了及其便捷的方式来做这个事情。本站的建立，也是受了blogdown/bookdown的主创者\u0026mdash;-谢益辉的启发。看到一个中国人的名字在R的大神里，还是很惊喜的。他也确实做了有意义的事情。\n","permalink":"https://stevechenzy.github.io/r/ggplot2/ggplot2_exercises/","tags":null,"title":"ggplot2 练习作业"},{"categories":null,"contents":"写代码，在我一直是个乐趣。创造一个东西，然后它就自己去运行了。\n过去写了很多年的程序，都是专业用的。有空了写点好玩的，也是一种乐趣。\n现在拿的出手的就是个“番茄倒计时”\u0026ndash;Pomodoro了，没有开发者账号，就放在Github上自己下载吧，也有源代码可以参考。写的不好，是初学Android是写着自用。\n","permalink":"https://stevechenzy.github.io/apps/_index__/","tags":null,"title":"Apps"},{"categories":null,"contents":"如何搭建这个网站的过程\n","permalink":"https://stevechenzy.github.io/web/hugo/_index-/","tags":null,"title":"hugo建站"},{"categories":["ggplot2"],"contents":"  有必要的话加载一下库\nlibrary(ggplot2) library(dplyr) ## ## Attaching package: \u0026#39;dplyr\u0026#39; ## The following objects are masked from \u0026#39;package:stats\u0026#39;: ## ## filter, lag ## The following objects are masked from \u0026#39;package:base\u0026#39;: ## ## intersect, setdiff, setequal, union 7.1 多边形地图 Ploygon Maps 密歇根州的地图数据,是一些经纬度的点。\nmi_counties \u0026lt;- map_data(\u0026quot;county\u0026quot;, \u0026quot;michigan\u0026quot;) %\u0026gt;% select(lon = long, lat, group, id = subregion) head(mi_counties) ## lon lat group id ## 1 -83.88675 44.85686 1 alcona ## 2 -83.36536 44.86832 1 alcona ## 3 -83.36536 44.86832 1 alcona ## 4 -83.33098 44.83968 1 alcona ## 5 -83.30806 44.80530 1 alcona ## 6 -83.30233 44.77665 1 alcona 将这些点画出来，再用坐标系(coord_quickmap) 调整一下，经纬度直接放到笛卡尔坐标系中，看起来比例会失调。\nggplot(mi_counties, aes(lon, lat)) + geom_point(size = .25, show.legend = FALSE, color =\u0026quot;red\u0026quot;) + coord_quickmap() 位置点按group分组，应该是州下面的县吧，一个组一个多边形，填充，加边框。\nggplot(mi_counties, aes(lon, lat, group = group)) + geom_polygon(fill = \u0026quot;pink\u0026quot;, colour = \u0026quot;grey50\u0026quot;) + coord_quickmap()  7.2 7.2 Simple features maps 是另一种地图的格式 ozmaps中有相关的SF格式的数据，是澳大利亚的地图数据。\nlibrary(ozmaps) library(sf) ## Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0 oz_states \u0026lt;- ozmaps::ozmap_states oz_states ## Simple feature collection with 9 features and 1 field ## geometry type: MULTIPOLYGON ## dimension: XY ## bbox: xmin: 105.5507 ymin: -43.63203 xmax: 167.9969 ymax: -9.229287 ## epsg (SRID): 4283 ## proj4string: +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs ## # A tibble: 9 x 2 ## NAME geometry ## \u0026lt;chr\u0026gt; \u0026lt;MULTIPOLYGON [°]\u0026gt; ## 1 New South Wales (((150.7016 -35.12286, 150.6611 -35.11782, 150.6373 -35.… ## 2 Victoria (((146.6196 -38.70196, 146.6721 -38.70259, 146.6744 -38.… ## 3 Queensland (((148.8473 -20.3457, 148.8722 -20.37575, 148.8515 -20.3… ## 4 South Australia (((137.3481 -34.48242, 137.3749 -34.46885, 137.3805 -34.… ## 5 Western Australia (((126.3868 -14.01168, 126.3625 -13.98264, 126.3765 -13.… ## 6 Tasmania (((147.8397 -40.29844, 147.8902 -40.30258, 147.8812 -40.… ## 7 Northern Territory (((136.3669 -13.84237, 136.3339 -13.83922, 136.3532 -13.… ## 8 Australian Capital … (((149.2317 -35.222, 149.2346 -35.24047, 149.2716 -35.27… ## 9 Other Territories (((167.9333 -29.05421, 167.9188 -29.0344, 167.9313 -29.0… ggplot(oz_states) + geom_sf() + coord_sf() 7.2.1 地图分层 一个是州的数据，一个是投票的数据\noz_states \u0026lt;- ozmaps::ozmap_states %\u0026gt;% filter(NAME != \u0026quot;Other Territories\u0026quot;) oz_votes \u0026lt;- rmapshaper::ms_simplify(ozmaps::abs_ced) ## Registered S3 method overwritten by \u0026#39;geojsonlint\u0026#39;: ## method from ## print.location dplyr 分别画到不同的地图层上：\nggplot() + geom_sf(data = oz_states, mapping = aes(fill = NAME), show.legend = FALSE) + geom_sf(data = oz_votes, fill = NA) + coord_sf()  7.2.2 地图的标注 选取指定列表中的区域的数据，按名称分别着色，最后标注一个层。\n# filter electorates in the Sydney metropolitan region sydney_map \u0026lt;- ozmaps::abs_ced %\u0026gt;% filter(NAME %in% c( \u0026quot;Sydney\u0026quot;, \u0026quot;Wentworth\u0026quot;, \u0026quot;Warringah\u0026quot;, \u0026quot;Kingsford Smith\u0026quot;, \u0026quot;Grayndler\u0026quot;, \u0026quot;Lowe\u0026quot;, \u0026quot;North Sydney\u0026quot;, \u0026quot;Barton\u0026quot;, \u0026quot;Bradfield\u0026quot;, \u0026quot;Banks\u0026quot;, \u0026quot;Blaxland\u0026quot;, \u0026quot;Reid\u0026quot;, \u0026quot;Watson\u0026quot;, \u0026quot;Fowler\u0026quot;, \u0026quot;Werriwa\u0026quot;, \u0026quot;Prospect\u0026quot;, \u0026quot;Parramatta\u0026quot;, \u0026quot;Bennelong\u0026quot;, \u0026quot;Mackellar\u0026quot;, \u0026quot;Greenway\u0026quot;, \u0026quot;Mitchell\u0026quot;, \u0026quot;Chifley\u0026quot;, \u0026quot;McMahon\u0026quot; )) # draw the electoral map of Sydney ggplot(sydney_map) + geom_sf(aes(fill = NAME), show.legend = FALSE) + coord_sf(xlim = c(150.97, 151.3), ylim = c(-33.98, -33.79)) + geom_sf_label(aes(label = NAME), label.padding = unit(1, \u0026quot;mm\u0026quot;)) ## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not ## give correct results for longitude/latitude data  7.2.3 添加一个其它的图形，首府的位置（经度，纬度），用点（geom_point)团层 oz_capitals \u0026lt;- tibble::tribble( ~city, ~lat, ~lon, \u0026quot;Sydney\u0026quot;, -33.8688, 151.2093, \u0026quot;Melbourne\u0026quot;, -37.8136, 144.9631, \u0026quot;Brisbane\u0026quot;, -27.4698, 153.0251, \u0026quot;Adelaide\u0026quot;, -34.9285, 138.6007, \u0026quot;Perth\u0026quot;, -31.9505, 115.8605, \u0026quot;Hobart\u0026quot;, -42.8821, 147.3272, \u0026quot;Canberra\u0026quot;, -35.2809, 149.1300, \u0026quot;Darwin\u0026quot;, -12.4634, 130.8456, ) ggplot() + geom_sf(data = oz_votes) + geom_sf(data = oz_states, colour = \u0026quot;black\u0026quot;, fill = NA) + geom_point(data = oz_capitals, mapping = aes(x = lon, y = lat), colour = \u0026quot;red\u0026quot;) + coord_sf()   7.3 Map projections 地球不是一个平面，需要一个地理的坐标系的调整coordinate reference system，CRS\nst_crs(oz_votes) ## Coordinate Reference System: ## EPSG: 4283 ## proj4string: \u0026quot;+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs\u0026quot; 澳大利亚看起来更精确一些？\nggplot(oz_votes) + geom_sf() + coord_sf(crs = st_crs(\u0026quot;+proj=lcc +datum=WGS84\u0026quot;)) crs \u0026lt;- \u0026quot;+proj=lcc +datum=WGS84 +lat_0=-25 +lon_0=140 +lat_1=-18 +lat_2=-36\u0026quot; ggplot(oz_votes) + geom_sf() + coord_sf(crs = st_crs(crs))  7.4 Working with sf data edenmonaro \u0026lt;- ozmaps::abs_ced %\u0026gt;% filter(NAME == \u0026quot;Eden-Monaro\u0026quot;) p \u0026lt;- ggplot(edenmonaro) + geom_sf() p + coord_sf(xlim = c(147.75, 150.25), ylim = c(-37.5, -34.5))  p + coord_sf(xlim = c(150, 150.25), ylim = c(-36.3, -36))  # p + coord_sf(xlim = c(150, 150.25), ylim = c(-36, -36.3)) 书中有个bug edenmonaro \u0026lt;- edenmonaro %\u0026gt;% pull(geometry) st_bbox(edenmonaro) ## xmin ymin xmax ymax ## 147.68741 -37.50503 150.23068 -34.53558 #\u0026gt; xmin ymin xmax ymax #\u0026gt; 147.7 -37.5 150.2 -34.5 edenmonaro  ## Geometry set for 1 feature ## geometry type: MULTIPOLYGON ## dimension: XY ## bbox: xmin: 147.6874 ymin: -37.50503 xmax: 150.2307 ymax: -34.53558 ## epsg (SRID): 4283 ## proj4string: +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs ## MULTIPOLYGON (((150.2307 -36.24468, 150.2287 -3... #\u0026gt; Geometry set for 1 feature #\u0026gt; geometry type: MULTIPOLYGON #\u0026gt; MULTIPOLYGON (((150 -36.2, 150 -36.2, 150 -36.3... st_cast(edenmonaro, \u0026quot;POLYGON\u0026quot;) ## Geometry set for 2 features ## geometry type: POLYGON ## dimension: XY ## bbox: xmin: 147.6874 ymin: -37.50503 xmax: 150.2307 ymax: -34.53558 ## epsg (SRID): 4283 ## proj4string: +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs ## POLYGON ((150.2307 -36.24468, 150.2287 -36.2490... ## POLYGON ((148.1345 -36.74374, 148.1366 -36.7393... #\u0026gt; Geometry set for 2 features #\u0026gt; geometry type: POLYGON #\u0026gt; POLYGON ((150 -36.2, 150 -36.2, 150 -36.3, 150 ... #\u0026gt; POLYGON ((148 -36.7, 148 -36.7, 148 -36.7, 148 ... dawson \u0026lt;- ozmaps::abs_ced %\u0026gt;% filter(NAME == \u0026quot;Dawson\u0026quot;) %\u0026gt;% pull(geometry) dawson ## Geometry set for 1 feature ## geometry type: MULTIPOLYGON ## dimension: XY ## bbox: xmin: 146.761 ymin: -21.21307 xmax: 149.9114 ymax: -19.18582 ## epsg (SRID): 4283 ## proj4string: +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs ## MULTIPOLYGON (((147.8981 -19.85285, 147.899 -19... #\u0026gt; Geometry set for 1 feature #\u0026gt; geometry type: MULTIPOLYGON #\u0026gt; MULTIPOLYGON (((148 -19.9, 148 -19.8, 148 -19.8... ggplot(dawson) + geom_sf() + coord_sf() dawson \u0026lt;- st_cast(dawson, \u0026quot;POLYGON\u0026quot;) st_area(dawson) ## Units: [m^2] ## [1] 1.909892e+05 5.882283e+05 2.635586e+07 1.758655e+05 1.129020e+06 ## [6] 3.003666e+05 2.092691e+05 4.577543e+05 1.466749e+05 9.125599e+05 ## [11] 1.173029e+06 1.212640e+06 2.503836e+05 2.810581e+05 7.973221e+05 ## [16] 1.749108e+05 3.229309e+05 2.677653e+06 3.489708e+06 2.344368e+05 ## [21] 1.894026e+05 4.841221e+05 2.024420e+06 4.763952e+05 1.895080e+05 ## [26] 6.616333e+06 5.354126e+07 4.550664e+06 1.541931e+07 6.376682e+06 ## [31] 3.970536e+06 8.190446e+05 6.879306e+05 1.360343e+05 2.928053e+06 ## [36] 6.173295e+05 3.807525e+05 4.198479e+05 2.696862e+06 2.387335e+06 ## [41] 7.664962e+05 1.057469e+08 1.030827e+07 7.595186e+06 4.434614e+06 ## [46] 4.437562e+05 1.964999e+05 2.147435e+06 6.837429e+05 1.535143e+06 ## [51] 8.109296e+05 2.113259e+06 1.899466e+05 1.409044e+05 1.092670e+07 ## [56] 1.466357e+06 1.691391e+06 5.323031e+06 4.408680e+06 1.028809e+07 ## [61] 6.486412e+06 3.921074e+05 1.088608e+06 3.998037e+05 3.434547e+05 ## [66] 4.227004e+05 4.173320e+06 1.084524e+05 1.106814e+10 3.416470e+07 #\u0026gt; Units: [m^2] #\u0026gt; [1] 1.91e+05 5.88e+05 2.64e+07 1.76e+05 1.13e+06 3.00e+05 2.09e+05 4.58e+05 #\u0026gt; [9] 1.47e+05 9.13e+05 1.17e+06 1.21e+06 2.50e+05 2.81e+05 7.97e+05 1.75e+05 #\u0026gt; [17] 3.23e+05 2.68e+06 3.49e+06 2.34e+05 1.89e+05 4.84e+05 2.02e+06 4.76e+05 #\u0026gt; [25] 1.90e+05 6.62e+06 5.35e+07 4.55e+06 1.54e+07 6.38e+06 3.97e+06 8.19e+05 #\u0026gt; [33] 6.88e+05 1.36e+05 2.93e+06 6.17e+05 3.81e+05 4.20e+05 2.70e+06 2.39e+06 #\u0026gt; [41] 7.66e+05 1.06e+08 1.03e+07 7.60e+06 4.43e+06 4.44e+05 1.96e+05 2.15e+06 #\u0026gt; [49] 6.84e+05 1.54e+06 8.11e+05 2.11e+06 1.90e+05 1.41e+05 1.09e+07 1.47e+06 #\u0026gt; [57] 1.69e+06 5.32e+06 4.41e+06 1.03e+07 6.49e+06 3.92e+05 1.09e+06 4.00e+05 #\u0026gt; [65] 3.43e+05 4.23e+05 4.17e+06 1.08e+05 1.11e+10 3.42e+07 ggplot(dawson[-69]) + geom_sf() + coord_sf()  7.5 Raster maps 利用保存过的数据，从github下载mi_raster.rds\nif (file.exists(\u0026quot;mi_raster.rds\u0026quot;)) { mi_raster \u0026lt;- readRDS(\u0026quot;mi_raster.rds\u0026quot;) } else { bbox \u0026lt;- c( min(mi_counties$lon), min(mi_counties$lat), max(mi_counties$lon), max(mi_counties$lat) ) mi_raster \u0026lt;- ggmap::get_openstreetmap(bbox, scale = 8735660) saveRDS(mi_raster, \u0026quot;mi_raster.rds\u0026quot;) } ggmap::ggmap(mi_raster) mi_cities \u0026lt;- tbl_df(maps::us.cities) %\u0026gt;% filter(country.etc == \u0026quot;MI\u0026quot;) %\u0026gt;% select(-country.etc, lon = long) ggmap::ggmap(mi_raster) + geom_point(aes(size = pop), mi_cities, colour = \u0026quot;red\u0026quot;) + scale_size_area()  ","permalink":"https://stevechenzy.github.io/r/ggplot2/chapter-7/","tags":["R"],"title":"第七章作业（地图）"},{"categories":["R"],"contents":"the C code int main(){ printf(\u0026quot;hello world!\u0026quot;); return 0; }  the Java code /* HelloWorld.java */ public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026quot;Hello World!\u0026quot;); } } public class EnhancedFor { public static void main(String[] args) {\tint[] list ={1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; int sum = sumListEnhanced(list); System.out.println(\u0026quot;Sum of elements in list: \u0026quot; + sum); System.out.println(\u0026quot;Original List\u0026quot;); printList(list); System.out.println(\u0026quot;Calling addOne\u0026quot;); addOne(list); System.out.println(\u0026quot;List after call to addOne\u0026quot;); printList(list); System.out.println(\u0026quot;Calling addOneError\u0026quot;); addOneError(list); System.out.println(\u0026quot;List after call to addOneError. Note elements of list did not change.\u0026quot;); printList(list); } // pre: list != null // post: return sum of elements // uses enhanced for loop public static int sumListEnhanced(int[] list) {\tint total = 0; for(int val : list) {\ttotal += val; } return total; } // pre: list != null // post: return sum of elements // use traditional for loop public static int sumListOld(int[] list) {\tint total = 0; for(int i = 0; i \u0026lt; list.length; i++) {\ttotal += list[i]; System.out.println( list[i] ); } return total; } // pre: list != null // post: none. // The code appears to add one to every element in the list, but does not public static void addOneError(int[] list) {\tfor(int val : list) {\tval = val + 1; } } // pre: list != null // post: adds one to every element of list public static void addOne(int[] list) {\tfor(int i = 0; i \u0026lt; list.length; i++) {\tlist[i]++; } } public static void printList(int[] list) {\tSystem.out.println(\u0026quot;index, value\u0026quot;); for(int i = 0; i \u0026lt; list.length; i++) {\tSystem.out.println(i + \u0026quot;, \u0026quot; + list[i]); } } }  json { \u0026quot;glossary\u0026quot;: { \u0026quot;title\u0026quot;: \u0026quot;example glossary\u0026quot;, \u0026quot;GlossDiv\u0026quot;: { \u0026quot;title\u0026quot;: \u0026quot;S\u0026quot;, \u0026quot;GlossList\u0026quot;: { \u0026quot;GlossEntry\u0026quot;: { \u0026quot;ID\u0026quot;: \u0026quot;SGML\u0026quot;, \u0026quot;SortAs\u0026quot;: \u0026quot;SGML\u0026quot;, \u0026quot;GlossTerm\u0026quot;: \u0026quot;Standard Generalized Markup Language\u0026quot;, \u0026quot;Acronym\u0026quot;: \u0026quot;SGML\u0026quot;, \u0026quot;Abbrev\u0026quot;: \u0026quot;ISO 8879:1986\u0026quot;, \u0026quot;GlossDef\u0026quot;: { \u0026quot;para\u0026quot;: \u0026quot;A meta-markup language, used to create markup languages such as DocBook.\u0026quot;, \u0026quot;GlossSeeAlso\u0026quot;: [\u0026quot;GML\u0026quot;, \u0026quot;XML\u0026quot;] }, \u0026quot;GlossSee\u0026quot;: \u0026quot;markup\u0026quot; } } } } }  R ggplot(mpg, aes(cty, hwy)) + geom_point()  HTML \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;helloWorld\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; div{ text-align: center; font-size: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026quot;hello\u0026quot;\u0026gt;hello\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;script\u0026gt; var oDiv=document.getElementById('hello'); oDiv.onclick=function(){ alert('hello world!'); } \u0026lt;/script\u0026gt; \u0026lt;/html\u0026gt;  CSS /* Monokai Sublime style. Derived from Monokai by noformnocontent http://nn.mit-license.org/ */ .cnblogs-markdown .hljs { display: block; overflow-x: auto; padding: 0.5em; background: #23241f !important; color:white; font-size:16px !important; } .hljs, .hljs-tag, .hljs-subst { color: #f8f8f2; } .hljs-strong, .hljs-emphasis { color: #a8a8a2; } .hljs-bullet, .hljs-quote, .hljs-number, .hljs-regexp, .hljs-literal, .hljs-link { color: #ae81ff; } .hljs-code, .hljs-title, .hljs-section, .hljs-selector-class { color: #a6e22e; } .hljs-strong { font-weight: bold; } .hljs-emphasis { font-style: italic; } .hljs-keyword, .hljs-selector-tag, .hljs-name, .hljs-attr { color: #f92672; } .hljs-keyword,.hljs-built_in{ color:#66d9ef; } .hljs-symbol, .hljs-attribute { color: #66d9ef; } .hljs-params, .hljs-class .hljs-title { color: #f8f8f2; } .hljs-string, .hljs-type, .hljs-builtin-name, .hljs-selector-id, .hljs-selector-attr, .hljs-selector-pseudo, .hljs-addition, .hljs-variable, .hljs-template-variable { color: #e6db74; } .hljs-comment, .hljs-deletion{ color: #75715e; } .hljs-meta{ color: #f92672; }  JavaScript \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; var str=\u0026quot;Visit Microsoft!\u0026quot; document.write(str.replace(/Microsoft/, \u0026quot;W3School\u0026quot;)) \u0026lt;/script\u0026gt;  ","permalink":"https://stevechenzy.github.io/r/ggplot2/c-code-render/","tags":null,"title":"C Code Render"},{"categories":["R"],"contents":"  稍微读了一下源代码，理解了语言是如何影响到数据的。还是中文的更好。\n先做一些准备工作，下载remotes这个包\n# prepare for remote # install.packages(\u0026quot;remotes\u0026quot;) # library(remotes) 用remotes安装GuangchuangYu发布在github上的R包：nCov2019\n# install the package # remotes::install_github(\u0026quot;/nCov2019\u0026quot;) # library(nCov2019) 显示一些数据结构\n# load latest data Sys.setlocale(\u0026quot;LC_ALL\u0026quot;, locale=\u0026quot;zh_CN.UTF-8\u0026quot;) ## [1] \u0026quot;zh_CN.UTF-8/zh_CN.UTF-8/zh_CN.UTF-8/C/zh_CN.UTF-8/en_US.UTF-8\u0026quot; library(nCov2019) library(tidyverse) ## ─ Attaching packages ─────────────────────────── tidyverse 1.3.0 ─ ## ✓ ggplot2 3.3.0 ✓ purrr 0.3.3 ## ✓ tibble 2.1.3 ✓ dplyr 0.8.4 ## ✓ tidyr 1.0.2 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.4.0 ## ─ Conflicts ───────────────────────────── tidyverse_conflicts() ─ ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() x \u0026lt;- get_nCov2019(lang = \u0026quot;zh\u0026quot;) # show the total number x ## China (total confirmed cases): 80859 ## last update: 2020-03-08 15:31:30 # updated time time(x) ## [1] \u0026quot;2020-03-08 15:31:30\u0026quot; # open browser # open(x) # list different provinces #Sys.setlocale(\u0026quot;LC_ALL\u0026quot;, locale=\u0026quot;zh_CN.UTF-8\u0026quot;) # library(nCov2019) # x \u0026lt;- get_nCov2019() x[] ## name confirm suspect dead deadRate showRate heal healRate showHeal ## 1 湖北 67707 0 2986 4.41 FALSE 45011 66.48 TRUE ## 2 广东 1352 0 7 0.52 FALSE 1250 92.46 TRUE ## 3 河南 1272 0 22 1.73 FALSE 1246 97.96 TRUE ## 4 浙江 1215 0 1 0.08 FALSE 1169 96.21 TRUE ## 5 湖南 1018 0 4 0.39 FALSE 965 94.79 TRUE ## 6 安徽 990 0 6 0.61 FALSE 984 99.39 TRUE ## 7 江西 935 0 1 0.11 FALSE 918 98.18 TRUE ## 8 山东 758 0 6 0.79 FALSE 638 84.17 TRUE ## 9 江苏 631 0 0 0.00 FALSE 610 96.67 TRUE ## 10 重庆 576 0 6 1.04 FALSE 526 91.32 TRUE ## 11 四川 539 0 3 0.56 FALSE 457 84.79 TRUE ## 12 黑龙江 481 0 13 2.70 FALSE 409 85.03 TRUE ## 13 北京 428 0 8 1.87 FALSE 308 71.96 TRUE ## 14 上海 342 0 3 0.88 FALSE 314 91.81 TRUE ## 15 河北 318 0 6 1.89 FALSE 307 96.54 TRUE ## 16 福建 296 0 1 0.34 FALSE 295 99.66 TRUE ## 17 广西 252 0 2 0.79 FALSE 223 88.49 TRUE ## 18 陕西 245 0 1 0.41 FALSE 226 92.24 TRUE ## 19 云南 174 0 2 1.15 FALSE 170 97.70 TRUE ## 20 海南 168 0 6 3.57 FALSE 158 94.05 TRUE ## 21 贵州 146 0 2 1.37 FALSE 117 80.14 TRUE ## 22 天津 136 0 3 2.21 FALSE 128 94.12 TRUE ## 23 山西 133 0 0 0.00 FALSE 126 94.74 TRUE ## 24 辽宁 125 0 1 0.80 FALSE 108 86.40 TRUE ## 25 甘肃 120 0 2 1.67 FALSE 87 72.50 TRUE ## 26 香港 109 0 2 1.83 FALSE 55 50.46 TRUE ## 27 吉林 93 0 1 1.08 FALSE 90 96.77 TRUE ## 28 新疆 76 0 3 3.95 FALSE 72 94.74 TRUE ## 29 宁夏 75 0 0 0.00 FALSE 71 94.67 TRUE ## 30 内蒙古 75 0 1 1.33 FALSE 68 90.67 TRUE ## 31 台湾 45 0 1 2.22 FALSE 13 28.89 TRUE ## 32 青海 18 0 0 0.00 FALSE 18 100.00 TRUE ## 33 澳门 10 0 0 0.00 FALSE 10 100.00 TRUE ## 34 西藏 1 0 0 0.00 FALSE 1 100.00 TRUE # # library(nCov2019) # x \u0026lt;- get_nCov2019() x[\u0026quot;湖北\u0026quot;] ## name confirm suspect dead deadRate showRate heal healRate showHeal ## 1 武汉 49912 0 2370 4.75 FALSE 29770 59.64 TRUE ## 2 孝感 3518 0 125 3.55 FALSE 3024 85.96 TRUE ## 3 黄冈 2907 0 125 4.30 FALSE 2627 90.37 TRUE ## 4 荆州 1580 0 49 3.10 FALSE 1376 87.09 TRUE ## 5 鄂州 1394 0 54 3.87 FALSE 988 70.88 TRUE ## 6 随州 1307 0 43 3.29 FALSE 1077 82.40 TRUE ## 7 襄阳 1175 0 38 3.23 FALSE 1055 89.79 TRUE ## 8 黄石 1015 0 36 3.55 FALSE 884 87.09 TRUE ## 9 宜昌 931 0 34 3.65 FALSE 727 78.09 TRUE ## 10 荆门 928 0 39 4.20 FALSE 743 80.06 TRUE ## 11 咸宁 836 0 14 1.67 FALSE 801 95.81 TRUE ## 12 十堰 672 0 8 1.19 FALSE 571 84.97 TRUE ## 13 仙桃 575 0 21 3.65 FALSE 501 87.13 TRUE ## 14 天门 496 0 15 3.02 FALSE 457 92.14 TRUE ## 15 恩施州 252 0 6 2.38 FALSE 231 91.67 TRUE ## 16 潜江 198 0 9 4.55 FALSE 168 84.85 TRUE ## 17 神农架 11 0 0 0.00 FALSE 11 100.00 TRUE #library(nCov2019) # library(ggplot2) #x \u0026lt;- get_nCov2019() b \u0026lt;- x[\u0026#39;北京\u0026#39;] b ## name confirm suspect dead deadRate showRate heal healRate showHeal ## 1 朝阳 72 0 0 0.00 FALSE 0 0.00 FALSE ## 2 海淀 63 0 0 0.00 FALSE 0 0.00 FALSE ## 3 西城 53 0 0 0.00 FALSE 0 0.00 FALSE ## 4 丰台 43 0 0 0.00 FALSE 0 0.00 FALSE ## 5 大兴 39 0 0 0.00 FALSE 0 0.00 FALSE ## 6 昌平 29 0 0 0.00 FALSE 0 0.00 FALSE ## 7 外地来京 25 0 0 0.00 FALSE 0 0.00 FALSE ## 8 通州 19 0 0 0.00 FALSE 0 0.00 FALSE ## 9 房山 16 0 0 0.00 FALSE 0 0.00 FALSE ## 10 石景山 14 0 0 0.00 FALSE 0 0.00 FALSE ## 11 东城 14 0 0 0.00 FALSE 0 0.00 FALSE ## 12 境外输入 13 0 0 0.00 FALSE 0 0.00 TRUE ## 13 顺义 10 0 0 0.00 FALSE 0 0.00 FALSE ## 14 密云 7 0 0 0.00 FALSE 0 0.00 FALSE ## 15 怀柔 7 0 0 0.00 FALSE 0 0.00 FALSE ## 16 门头沟 3 0 0 0.00 FALSE 0 0.00 FALSE ## 17 延庆 1 0 0 0.00 FALSE 0 0.00 FALSE ## 18 地区待确认 0 0 8 0.00 FALSE 308 0.00 TRUE ggplot(b, aes(name, confirm)) + geom_bar(stat = \u0026quot;identity\u0026quot;, fill = \u0026quot;pink\u0026quot;) + xlab(\u0026quot;城区(来源）\u0026quot;) + ylab(\u0026quot;确诊人数\u0026quot;) + theme_classic()+ theme(axis.text.x = element_text(angle = -90, vjust = 0.5, hjust = 0.0)) + theme(text = element_text(family = \u0026quot;STHeiti\u0026quot;))  # must be the last one to be sure the right font is oused.  # newly # library(tidyverse) # library(nCov2019) # x \u0026lt;- get_nCov2019() d = x[\u0026#39;global\u0026#39;,] %\u0026gt;% filter(name != \u0026#39;中国\u0026#39;) d$confirm=as.numeric(d$confirm) d$name = fct_reorder(d$name, d$confirm) ggplot(d, aes(name, confirm)) + geom_col(fill=\u0026#39;orange\u0026#39;, width = 0.8) + coord_flip() + geom_text(aes(y = confirm+2, label=confirm),size=2, hjust=0) + theme_minimal(base_size=10) + xlab(NULL) + ylab(NULL)+ theme(text = element_text(family = \u0026quot;STHeiti\u0026quot;))  # another plot # library(nCov2019) # library(ggplot2) # x \u0026lt;- get_nCov2019() ggplot(summary(x), aes(as.Date(date, \u0026quot;%m.%d\u0026quot;), as.numeric(confirm))) + geom_col(fill=\u0026#39;firebrick\u0026#39;) + theme_minimal(base_size = 14) + xlab(NULL) + ylab(NULL) + labs(caption = paste(\u0026quot;更新时间:\u0026quot;, time(x))) + theme(text = element_text(family = \u0026quot;STHeiti\u0026quot;))  ","permalink":"https://stevechenzy.github.io/r/ggplot2/conv-2019/","tags":null,"title":"Conv 2019"},{"categories":[],"contents":"  Insert Lead paragraph here.\nNew Cool Posts  ","permalink":"https://stevechenzy.github.io/r/ggplot2/chapter-6/","tags":[],"title":"Chapter_6"},{"categories":["R","ggplot2"],"contents":"  原理 第四章的单个图表（Individual Geom），是对一个观察（observation，也就是一行数据）画的图形。\n集合图表（Collective Geom)，对应的数据是多行的。类似与Power BI的汇聚，或者measure（度量值）。\n数据的提供，使用了“组映射”（group aesthetic）的方式。连续变量也是需要分段才能够正确的映射。\n数据准备 data(Oxboys, package = \u0026quot;nlme\u0026quot;) head(Oxboys) ## Subject age height Occasion ## 1 1 -1.0000 140.5 1 ## 2 1 -0.7479 143.4 2 ## 3 1 -0.4630 144.8 3 ## 4 1 -0.1643 147.1 4 ## 5 1 -0.0027 147.7 5 ## 6 1 0.2466 150.2 6 理解数据才能更好的作图：\nHeights of Boys in Oxford Description The Oxboys data frame has 234 rows and 4 columns. Format This data frame contains the following columns: Subject an ordered factor giving a unique identifier for each boy in the experiment age a numeric vector giving the standardized age (dimensionless) height a numeric vector giving the height of the boy (cm) Occasion an ordered factor - the result of converting age from a continuous variable to a count so these slightly unbalanced data can be analyzed as balanced. Details These data are described in Goldstein (1987) as data on the height of a selection of boys from Oxford, England versus a standardized age. Source Pinheiro, J. C. and Bates, D. M. (2000), Mixed-Effects Models in S and S-PLUS, Springer, New York. (Appendix A.19)   多组，公用一个数据映射 library(ggplot2) ggplot(Oxboys, aes(age, height, group = Subject)) + geom_point() + geom_line()  如果分组指定的不正确,下面是没有给出分组，默认参数 ggplot(Oxboys, aes(age, height)) + geom_point() + geom_line()  不同的组，放在不同的图层 回归的线，放在另一个图层里。\nggplot(Oxboys, aes(age, height, group = Subject)) + geom_line() + geom_smooth(method = \u0026quot;lm\u0026quot;, se = FALSE) ## `geom_smooth()` using formula \u0026#39;y ~ x\u0026#39;  在不同的图层设定了不同的数据映射（aes） ggplot中的数据映射（aes）是所有图层缺省使用的映射，如果本图层指定\nggplot(Oxboys, aes(age, height)) + geom_line(aes(group = Subject)) + geom_smooth(method = \u0026quot;lm\u0026quot;, size = 2, se = FALSE) ## `geom_smooth()` using formula \u0026#39;y ~ x\u0026#39;  重载分组映射 对孩子的身高分段画箱型图\nggplot(Oxboys, aes(Occasion, height)) + geom_boxplot() 有了Occsion这个离散的x值，箱型图是可以了，但是折线图如果用这个映射就不是想要的结果了\nggplot(Oxboys, aes(Occasion, height)) + geom_boxplot() + geom_line(colour = \u0026quot;#3366FF\u0026quot;, alpha = 0.5) 为了得到想要的图，所以要重载（override）映射），想要的是体现某个人（Subject）身高变化的折线。都还在长身体 :)\nggplot(Oxboys, aes(Occasion, height)) + geom_boxplot() + geom_line(aes(group = Subject), colour = \u0026quot;#3366FF\u0026quot;, alpha = 0.5)  数据对象映射（aes）要和图形对象匹配 colour = factor(colour),对数据中的Colour做了处理，是个分类的离散量，只有3个不同的值，与1/3/5的数值无关。\ndf \u0026lt;- data.frame(x = 1:3, y = 1:3, colour = c(1,3,5)) ggplot(df, aes(x, y, colour = factor(colour))) + geom_line(aes(group = 1), size = 2) + geom_point(size = 5) 未做处理的colour = c(1,3,5)，是数值，是个连续的变量，1～5的值都是有的。\nggplot(df, aes(x, y, colour = colour)) + geom_line(aes(group = 1), size = 2) + geom_point(size = 5) 这个连续的过度并没有很平滑的过渡，要做到这一点,看下面\nxgrid \u0026lt;- with(df, seq(min(x), max(x), length = 50)) interp \u0026lt;- data.frame( x = xgrid, y = approx(df$x, df$y, xout = xgrid)$y, colour = approx(df$x, df$colour, xout = xgrid)$y ) ggplot(interp, aes(x, y, colour = colour)) + geom_line(size = 2) + geom_point(data = df, size = 5) 堆叠的例子 ggplot(mpg, aes(class)) + geom_bar() ggplot(mpg, aes(class, fill = drv)) + geom_bar()  连续变量做堆叠是没有意义的 ggplot(mpg, aes(class, fill = hwy)) + geom_bar() ggplot(mpg, aes(class, fill = hwy, group = hwy)) + geom_bar() 需要使用factor来进行离散处理\n   练习题 Draw a boxplot of hwy for each value of cyl, without turning cyl into a factor. What extra aesthetic do you need to set?  ggplot(mpg, aes(cyl, hwy)) + geom_boxplot() ## Warning: Continuous x aesthetic -- did you forget aes(group=...)? 找个变量分个组好看点\nggplot(mpg, aes(cyl, hwy, group = class)) + geom_boxplot() head(mpg) ## # A tibble: 6 x 11 ## manufacturer model displ year cyl trans drv cty hwy fl class ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 audi a4 1.8 1999 4 auto(l5) f 18 29 p compa… ## 2 audi a4 1.8 1999 4 manual(m5) f 21 29 p compa… ## 3 audi a4 2 2008 4 manual(m6) f 20 31 p compa… ## 4 audi a4 2 2008 4 auto(av) f 21 30 p compa… ## 5 audi a4 2.8 1999 6 auto(l5) f 16 26 p compa… ## 6 audi a4 2.8 1999 6 manual(m5) f 18 26 p compa… 找个别的变量分个组，比如车的排量。有点意义\nggplot(mpg, aes(cyl, hwy, group = displ)) + geom_boxplot() Modify the following plot so that you get one boxplot per integer value of displ.  ggplot(mpg, aes(displ, cty)) + geom_boxplot() ## Warning: Continuous y aesthetic -- did you forget aes(group=...)? 添加group，factor处理一下连续的变量\nggplot(mpg, aes(displ, cty, group = factor(displ))) + geom_boxplot() When illustrating the difference between mapping continuous and discrete colours to a line, the discrete example needed aes(group = 1). Why? What happens if that is omitted? What’s the difference between aes(group = 1) and aes(group = 2)? Why?  df \u0026lt;- data.frame(x = 1:3, y = 1:3, colour = c(1,3,5)) ggplot(df, aes(x, y, colour = colour)) + geom_line(aes(group = 1), size = 2) + geom_point(size = 5) 颜色连续变化，只显示了1～3这一段\ndf \u0026lt;- data.frame(x = 1:3, y = 1:3, colour = c(1,3,5)) ggplot(df, aes(x, y, colour = colour)) + geom_line(size = 2) + geom_point(size = 5) 去掉group = 1,就画不出线来了。对上面的连续的值没有影响。\ndf \u0026lt;- data.frame(x = 1:3, y = 1:3, colour = c(1,3,5)) ggplot(df, aes(x, y, colour = factor(colour))) + geom_line(size = 2) + geom_point(size = 5) ## geom_path: Each group consists of only one observation. Do you need to adjust ## the group aesthetic? df \u0026lt;- data.frame(x = 1:3, y = 1:3, colour = c(1,3,5)) ggplot(df, aes(x, y, colour = factor(colour))) + geom_line(aes(group = 1), size = 2) + geom_point(size = 5) How many bars are in each of the following plots?  ggplot(mpg, aes(drv)) + geom_bar() ggplot(mpg, aes(drv,color=\u0026quot;white\u0026quot;)) + geom_bar() ggplot(mpg, aes(drv, fill = hwy, group = hwy)) + geom_bar() ggplot(mpg, aes(drv, fill = hwy, group = hwy, color=\u0026quot;white\u0026quot;)) + geom_bar() library(dplyr)  ## ## Attaching package: \u0026#39;dplyr\u0026#39; ## The following objects are masked from \u0026#39;package:stats\u0026#39;: ## ## filter, lag ## The following objects are masked from \u0026#39;package:base\u0026#39;: ## ## intersect, setdiff, setequal, union mpg2 \u0026lt;- mpg %\u0026gt;% arrange(hwy) %\u0026gt;% mutate(id = seq_along(hwy)) ggplot(mpg2, aes(drv, fill = hwy, group = id)) + geom_bar() library(dplyr) mpg2 \u0026lt;- mpg %\u0026gt;% arrange(hwy) %\u0026gt;% mutate(id = seq_along(hwy)) ggplot(mpg2, aes(drv, fill = hwy, group = id, color=\u0026quot;white\u0026quot;)) + geom_bar() (Hint: try adding an outline around each bar with colour = “white”)\nInstall the babynames package. It contains data about the popularity of babynames in the US. Run the following code and fix the resulting graph. Why does this graph make me unhappy?  library(babynames) hadley \u0026lt;- dplyr::filter(babynames, name == \u0026quot;Hadley\u0026quot;) ggplot(hadley, aes(year, n)) + geom_line() 先看看这个数据的结构\nhead(babynames) ## # A tibble: 6 x 5 ## year sex name n prop ## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; ## 1 1880 F Mary 7065 0.0724 ## 2 1880 F Anna 2604 0.0267 ## 3 1880 F Emma 2003 0.0205 ## 4 1880 F Elizabeth 1939 0.0199 ## 5 1880 F Minnie 1746 0.0179 ## 6 1880 F Margaret 1578 0.0162 每年有男女2个数据，导致图形波动。分开颜色之后发现，是2000年之后女性叫“Hadley”的人数剧增。作者Hadley大约是觉得自己的名字女性化了，有些尴尬？\nhadley \u0026lt;- dplyr::filter(babynames, name == \u0026quot;Hadley\u0026quot;) ggplot(hadley, aes(year, n)) + geom_line(aes(color=sex))  ","permalink":"https://stevechenzy.github.io/r/ggplot2/chapter-5/","tags":null,"title":"第五章 Collective Geom"},{"categories":["R"],"contents":"  这一章节的代码举例： library(ggplot2) df \u0026lt;- data.frame( x = c(3, 1, 5), y = c(2, 4, 6), label = c(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;) ) p \u0026lt;- ggplot(df, aes(x, y, label = label)) + labs(x = NULL, y = NULL) + # Hide axis label theme(plot.title = element_text(size = 12)) # Shrink plot title p + geom_point() + ggtitle(\u0026quot;point\u0026quot;) p + geom_text() + ggtitle(\u0026quot;text\u0026quot;) p + geom_bar(stat = \u0026quot;identity\u0026quot;) + ggtitle(\u0026quot;bar\u0026quot;) p + geom_tile() + ggtitle(\u0026quot;raster\u0026quot;) p + geom_line() + ggtitle(\u0026quot;line\u0026quot;) p + geom_area() + ggtitle(\u0026quot;area\u0026quot;) p + geom_path() + ggtitle(\u0026quot;path\u0026quot;) p + geom_polygon() + ggtitle(\u0026quot;polygon\u0026quot;)  4.1.1 Exercises What geoms would you use to draw each of the following named plots?  Scatterplot\nLine chart\nHistogram\nBar chart\nPie chart\n我的回答 Scatterplot –\u0026gt; geom_point()\nLine chart –\u0026gt; geom_line()\nHistogram –\u0026gt;geom_histogram()\nBar chart –\u0026gt; geom_bar(stat = “identity”)\nPie chart –\u0026gt; geom_bar() + coord_polar\n Pie的例子 第一步 # Load ggplot2 # library(ggplot2) # Create Data data \u0026lt;- data.frame( group=LETTERS[1:5], value=c(13,7,9,21,2) ) # Basic piechart ggplot(data, aes(x=\u0026quot;\u0026quot;, y=value, fill=group)) + geom_bar(stat=\u0026quot;identity\u0026quot;, width=1) + coord_polar(\u0026quot;y\u0026quot;, start=0)  改进外观  删除数字标签 删除格子和背景  # Load ggplot2 # library(ggplot2) # Create Data data \u0026lt;- data.frame( group=LETTERS[1:5], value=c(13,7,9,21,2) ) # Basic piechart ggplot(data, aes(x=\u0026quot;\u0026quot;, y=value, fill=group)) + geom_bar(stat=\u0026quot;identity\u0026quot;, width=1, color=\u0026quot;white\u0026quot;) + coord_polar(\u0026quot;y\u0026quot;, start=0) + theme_void() # remove background, grid, numeric labels   添加标签 # Load ggplot2 library(ggplot2) library(dplyr) ## ## Attaching package: \u0026#39;dplyr\u0026#39; ## The following objects are masked from \u0026#39;package:stats\u0026#39;: ## ## filter, lag ## The following objects are masked from \u0026#39;package:base\u0026#39;: ## ## intersect, setdiff, setequal, union # Create Data data \u0026lt;- data.frame( group=LETTERS[1:5], value=c(13,7,9,21,2) ) # Compute the position of labels data \u0026lt;- data %\u0026gt;% arrange(desc(group)) %\u0026gt;% mutate(prop = value / sum(data$value) *100) %\u0026gt;% mutate(ypos = cumsum(prop)- 0.5*prop ) # Basic piechart ggplot(data, aes(x=\u0026quot;\u0026quot;, y=prop, fill=group)) + geom_bar(stat=\u0026quot;identity\u0026quot;, width=1, color=\u0026quot;white\u0026quot;) + coord_polar(\u0026quot;y\u0026quot;, start=0) + theme_void() + theme(legend.position=\u0026quot;none\u0026quot;) + geom_text(aes(y = ypos, label = group), color = \u0026quot;white\u0026quot;, size=6) + scale_fill_brewer(palette=\u0026quot;Set1\u0026quot;) What’s the difference between geom_path() and geom_polygon()? What’s the difference between geom_path() and geom_line()?  我的回答：  geom_polygon() 是在geom_path()之上填充内部。 geom_path()是按点在数据集中的顺序来连接的，geom_line()则是从左到右连接所有的点。  p + geom_line() + ggtitle(\u0026quot;line\u0026quot;) p + geom_path() + ggtitle(\u0026quot;path\u0026quot;) p + geom_polygon() + ggtitle(\u0026quot;ploygon\u0026quot;) What low-level geoms are used to draw geom_smooth()? What about geom_boxplot() and geom_violin()?   我的回答：  geom_smooth()是用了函数生成了一系列的点，用geom_line(),或geom_path()在做图 参加2.6.1的内容  ggplot(mpg, aes(drv, hwy)) + geom_boxplot() - geom_boxplot(), geom_violine()从图形上看，也是geom_path()的运用，数据的计算方式不同。\nggplot(mpg, aes(drv, hwy)) + geom_violin()    ","permalink":"https://stevechenzy.github.io/r/ggplot2/chapter_4/","tags":null,"title":"第四章：Individual geoms"},{"categories":["R"],"contents":"  3 Frequently asked questions\n","permalink":"https://stevechenzy.github.io/r/ggplot2/chapter_3/","tags":null,"title":"第三章没有作业"},{"categories":null,"contents":"Insert Lead paragraph here.\nNew Cool Posts ","permalink":"https://stevechenzy.github.io/web/hugo/what_is_archetype/","tags":null,"title":"What_is_archetype"},{"categories":["写字"],"contents":"有了张哲老师的入门课，又承蒙“掌柜书童”赵老师的悉心指导，准备了一些写字的工具，经过近一年的练习，也积累了自己的经验，记录如下。\n作为初学者，我是有足够的耐心来做这个事情的，计划3年入门。\n对初学写字，一种建议是从唐楷、大字写起，另一种建议按汉字书法的源流，从篆书、隶书、小楷，一路写到楷书、行书、草书。\n我听从了张哲老师的建议，从哪种字体写起，都可以入门，小楷最简单。一则用笔比较简单，直来直去，比后世的各种书体质朴很多，更接近于实用。篆隶离现实有些远了。二则工具简单，桌子、纸笔都比较小，墨也用的少。不需要太大的空间和条件，居家、旅行都可以坚持写。\n笔的保养 如果不用心保养，毛笔很容易损坏。一般来说，写字之前，先“开笔”，将笔放在水中浸泡几分钟，湿润了再动笔写字。用完之后，立即把笔洗净，用纸巾吸取多余的水份，挂在笔架上晾着。\n出差旅行 有旅行用的小包装墨汁，100ml以下，可以带上飞机。\n笔则要用笔帘保护起来，顺便把毡子和纸张也卷在一起。 临帖 张老师推荐《宣示表》，299个字，不长不短。\n因为没有基础，刚开始还想描红，后来有前辈说描红的作用不大，不如直接临帖，也就是比照着写。受网友的启发，按照我买的纸张的格子10X6，把宣示表做了五页的文件，打印，裁成条状，可以最方便的边看边写。有兴趣可以下载《宣示表》PDF，自己打印。\n有时会喜欢看看翻转的字帖，所以用Pyhton把图片都黑白翻转了一下，做了两种版本。\n赵老师说写字是一种仪式感的修养，端坐，平心静气，”如面至尊“，然后写字。字的进步取决于天赋，认真的、不急不躁的做事情，却是可以努力做好的。\n","permalink":"https://stevechenzy.github.io/calligraphy/xk_tools/","tags":null,"title":"写小楷的工具"},{"categories":["R","ggplot2"],"contents":"  Insert Lead paragraph here.\nNew Cool Posts  ","permalink":"https://stevechenzy.github.io/r/ggplot2/2020-02-24-/","tags":[],"title":"第三章练习"},{"categories":["R"],"contents":"R的代码\na \u0026lt;- c(1, 2, 3, 4) print(a)  RMrakdown的代码\nlibrary(ggplot2) ggplot(mpg, aes(hwy, cty)) + geom_point()  C语言的代码例子\nint main(){ printf(\u0026quot;hello world!\u0026quot;); return 0; }  Javascript代码\nvar a = \u0026quot;hello world!\u0026quot; alert a  Python\nimport a from c as b print(a)  ","permalink":"https://stevechenzy.github.io/r/r/","tags":[],"title":"代码的语法渲染"},{"categories":["hugo","web","markdown"],"contents":"一个可以支持中文站内搜索的Hugo风格。\n","permalink":"https://stevechenzy.github.io/web/hugo/theme_northendlab/","tags":null,"title":"Hugo 模版 Northendlab"},{"categories":["R","ggplot2"],"contents":"  pre  code.sourceCode { white-space: pre; position: relative; } pre  code.sourceCode  span { display: inline-block; line-height: 1.25; } pre  code.sourceCode  span:empty { height: 1.2em; } code.sourceCode  span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre  code.sourceCode { white-space: pre-wrap; } pre  code.sourceCode  span { text-indent: -5em; padding-left: 5em; } } pre.numberSource code { counter-reset: source-line 0; } pre.numberSource code  span { position: relative; left: -4em; counter-increment: source-line; } pre.numberSource code  span  a:first-child::before { content: counter(source-line); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { background-color: #f8f8f8; } @media screen { pre  code.sourceCode  span  a:first-child::before { text-decoration: underline; } } code span.al { color: #ef2929; } /* Alert */ code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */ code span.at { color: #c4a000; } /* Attribute */ code span.bn { color: #0000cf; } /* BaseN */ code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */ code span.ch { color: #4e9a06; } /* Char */ code span.cn { color: #000000; } /* Constant */ code span.co { color: #8f5902; font-style: italic; } /* Comment */ code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */ code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */ code span.dt { color: #204a87; } /* DataType */ code span.dv { color: #0000cf; } /* DecVal */ code span.er { color: #a40000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.fl { color: #0000cf; } /* Float */ code span.fu { color: #000000; } /* Function */ code span.im { } /* Import */ code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */ code span.kw { color: #204a87; font-weight: bold; } /* Keyword */ code span.op { color: #ce5c00; font-weight: bold; } /* Operator */ code span.ot { color: #8f5902; } /* Other */ code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */ code span.sc { color: #000000; } /* SpecialChar */ code span.ss { color: #4e9a06; } /* SpecialString */ code span.st { color: #4e9a06; } /* String */ code span.va { color: #000000; } /* Variable */ code span.vs { color: #4e9a06; } /* VerbatimString */ code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */  第一章的内容比较简单，关于如何安装ggplot的。有三条命令：\n安装 install.packages(\u0026quot;ggplot2\u0026quot;, repos = \u0026quot;http://cran.us.r-project.org\u0026quot;) ## Warning: unable to access index for repository http://cran.us.r-project.org/src/contrib: ## cannot open URL \u0026#39;http://cran.us.r-project.org/src/contrib/PACKAGES\u0026#39; ## Warning: package \u0026#39;ggplot2\u0026#39; is not available (for R version 3.6.2) ## Warning: unable to access index for repository http://cran.us.r-project.org/bin/macosx/el-capitan/contrib/3.6: ## cannot open URL \u0026#39;http://cran.us.r-project.org/bin/macosx/el-capitan/contrib/3.6/PACKAGES\u0026#39;  环境信息 devtools::session_info(c(\u0026quot;ggplot2\u0026quot;, \u0026quot;dplyr\u0026quot;, \u0026quot;broom\u0026quot;)) ## ─ Session info ─────────────────────────────────────────────────────────────── ## setting value ## version R version 3.6.2 (2019-12-12) ## os macOS Catalina 10.15.3 ## system x86_64, darwin15.6.0 ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz Asia/Shanghai ## date 2020-02-24 ## ## ─ Packages ─────────────────────────────────────────────────────────────────── ## package * version date lib source ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 3.6.0) ## backports 1.1.5 2019-10-02 [1] CRAN (R 3.6.0) ## BH 1.72.0-3 2020-01-08 [1] CRAN (R 3.6.0) ## broom 0.5.4 2020-01-27 [1] CRAN (R 3.6.2) ## cli 2.0.1 2020-01-08 [1] CRAN (R 3.6.0) ## colorspace 1.4-1 2019-03-18 [1] CRAN (R 3.6.0) ## crayon 1.3.4 2017-09-16 [1] CRAN (R 3.6.0) ## digest 0.6.23 2019-11-23 [1] CRAN (R 3.6.0) ## dplyr 0.8.4 2020-01-31 [1] CRAN (R 3.6.0) ## ellipsis 0.3.0 2019-09-20 [1] CRAN (R 3.6.0) ## fansi 0.4.1 2020-01-08 [1] CRAN (R 3.6.0) ## farver 2.0.3 2020-01-16 [1] CRAN (R 3.6.0) ## generics 0.0.2 2018-11-29 [1] CRAN (R 3.6.0) ## ggplot2 3.2.1 2019-08-10 [1] CRAN (R 3.6.0) ## glue 1.3.1 2019-03-12 [1] CRAN (R 3.6.0) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 3.6.0) ## labeling 0.3 2014-08-23 [1] CRAN (R 3.6.0) ## lattice 0.20-38 2018-11-04 [1] CRAN (R 3.6.2) ## lazyeval 0.2.2 2019-03-15 [1] CRAN (R 3.6.0) ## lifecycle 0.1.0 2019-08-01 [1] CRAN (R 3.6.0) ## magrittr 1.5 2014-11-22 [1] CRAN (R 3.6.0) ## MASS 7.3-51.5 2019-12-20 [1] CRAN (R 3.6.0) ## Matrix 1.2-18 2019-11-27 [1] CRAN (R 3.6.2) ## mgcv 1.8-31 2019-11-09 [1] CRAN (R 3.6.2) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 3.6.0) ## nlme 3.1-143 2019-12-10 [1] CRAN (R 3.6.0) ## pillar 1.4.3 2019-12-20 [1] CRAN (R 3.6.0) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 3.6.0) ## plogr 0.2.0 2018-03-25 [1] CRAN (R 3.6.0) ## plyr 1.8.5 2019-12-10 [1] CRAN (R 3.6.0) ## purrr 0.3.3 2019-10-18 [1] CRAN (R 3.6.0) ## R6 2.4.1 2019-11-12 [1] CRAN (R 3.6.0) ## RColorBrewer 1.1-2 2014-12-07 [1] CRAN (R 3.6.0) ## Rcpp 1.0.3 2019-11-08 [1] CRAN (R 3.6.0) ## reshape2 1.4.3 2017-12-11 [1] CRAN (R 3.6.0) ## rlang 0.4.4 2020-01-28 [1] CRAN (R 3.6.2) ## scales 1.1.0 2019-11-18 [1] CRAN (R 3.6.0) ## stringi 1.4.5 2020-01-11 [1] CRAN (R 3.6.0) ## stringr 1.4.0 2019-02-10 [1] CRAN (R 3.6.0) ## tibble 2.1.3 2019-06-06 [1] CRAN (R 3.6.0) ## tidyr 1.0.2 2020-01-24 [1] CRAN (R 3.6.0) ## tidyselect 1.0.0 2020-01-27 [1] CRAN (R 3.6.2) ## utf8 1.1.4 2018-05-24 [1] CRAN (R 3.6.0) ## vctrs 0.2.2 2020-01-24 [1] CRAN (R 3.6.2) ## viridisLite 0.3.0 2018-02-01 [1] CRAN (R 3.6.0) ## withr 2.1.2 2018-03-15 [1] CRAN (R 3.6.0) ## ## [1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library  宽度信息 getOption(\u0026quot;width\u0026quot;) ## [1] 80 第一章结束\n ","permalink":"https://stevechenzy.github.io/r/ggplot2/chapt_1/","tags":[],"title":"第一章练习"},{"categories":["R","ggplot2"],"contents":"  pre  code.sourceCode { white-space: pre; position: relative; } pre  code.sourceCode  span { display: inline-block; line-height: 1.25; } pre  code.sourceCode  span:empty { height: 1.2em; } code.sourceCode  span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre  code.sourceCode { white-space: pre-wrap; } pre  code.sourceCode  span { text-indent: -5em; padding-left: 5em; } } pre.numberSource code { counter-reset: source-line 0; } pre.numberSource code  span { position: relative; left: -4em; counter-increment: source-line; } pre.numberSource code  span  a:first-child::before { content: counter(source-line); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { background-color: #f8f8f8; } @media screen { pre  code.sourceCode  span  a:first-child::before { text-decoration: underline; } } code span.al { color: #ef2929; } /* Alert */ code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */ code span.at { color: #c4a000; } /* Attribute */ code span.bn { color: #0000cf; } /* BaseN */ code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */ code span.ch { color: #4e9a06; } /* Char */ code span.cn { color: #000000; } /* Constant */ code span.co { color: #8f5902; font-style: italic; } /* Comment */ code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */ code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */ code span.dt { color: #204a87; } /* DataType */ code span.dv { color: #0000cf; } /* DecVal */ code span.er { color: #a40000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.fl { color: #0000cf; } /* Float */ code span.fu { color: #000000; } /* Function */ code span.im { } /* Import */ code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */ code span.kw { color: #204a87; font-weight: bold; } /* Keyword */ code span.op { color: #ce5c00; font-weight: bold; } /* Operator */ code span.ot { color: #8f5902; } /* Other */ code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */ code span.sc { color: #000000; } /* SpecialChar */ code span.ss { color: #4e9a06; } /* SpecialString */ code span.st { color: #4e9a06; } /* String */ code span.va { color: #000000; } /* Variable */ code span.vs { color: #4e9a06; } /* VerbatimString */ code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */  1. 加载ggplot2 到工作环境中 library(ggplot2) mpg ## # A tibble: 234 x 11 ## manufacturer model displ year cyl trans drv cty hwy fl class ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 audi a4 1.8 1999 4 auto(l… f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manual… f 21 29 p comp… ## 3 audi a4 2 2008 4 manual… f 20 31 p comp… ## 4 audi a4 2 2008 4 auto(a… f 21 30 p comp… ## 5 audi a4 2.8 1999 6 auto(l… f 16 26 p comp… ## 6 audi a4 2.8 1999 6 manual… f 18 26 p comp… ## 7 audi a4 3.1 2008 6 auto(a… f 18 27 p comp… ## 8 audi a4 quat… 1.8 1999 4 manual… 4 18 26 p comp… ## 9 audi a4 quat… 1.8 1999 4 auto(l… 4 16 25 p comp… ## 10 audi a4 quat… 2 2008 4 manual… 4 20 28 p comp… ## # … with 224 more rows  2. 做一个基本的散点图 ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()  ","permalink":"https://stevechenzy.github.io/r/ggplot2/chapter_2/","tags":[],"title":"第二章作业"},{"categories":["写字"],"contents":"小楷的缘分\n2019年开始正经的练习毛笔字。\n小区的老年大学请了区里的张哲（？音）老师来讲书法入门，我去了一次，从此开始了曲折的练习。\n","permalink":"https://stevechenzy.github.io/calligraphy/xiokai_start/","tags":null,"title":"小楷缘起"},{"categories":["hugo","web","markdown"],"contents":"如何用gohugo建设一个静态网站，\n","permalink":"https://stevechenzy.github.io/web/hugo/setup_process/","tags":null,"title":"使用Hugo建本站的过程"},{"categories":["Apps","Android"],"contents":"English Version\n  \u0026ldquo;专心倒计时“（Pomodoro）是一个简单的安卓（Android）设备上可以安装使用的App\n下载安装 下载github上最新版 Apk\n或者用手机扫描二维码下载（微信的扫一扫可能会屏蔽，使用手机上其它的二维码扫描软件）:\n  开发的缘由  市场上的番茄钟应用都太炫、充斥了广告和推广信息，甚至申请各种不必要的权限，完全是与专心致志的目标背道而驰。\n求人不如求己，自己开发一个吧！\n\u0026ldquo;前软件工程师\u0026quot;开发的第一个安卓手机应用，极简单、极干净、不要额外的权限，不要广告。满足自己看书、工作甚至培训上课的需要。\n使用方法：  启动/暂停：双击 屏幕, 长按 暂停。 停止/取消：水平从左边缘划到右边缘 切换预设时间（45,30, 25, 15, 10, 7, 5, 3, 1分钟）：在定时器不处于运行或暂停的状态时，水平滑过屏幕 自由调整时间：缩放（2指），滚动（1指，垂直方向）  如果倒计时时间很长，手机会锁屏或休眠，需要允许\u0026rdquo;唤醒\u0026ldquo;的权限，和打开这个app的\u0026rdquo;锁屏通知\u0026ldquo;开关。\n  下载使用指南的视频\n 培训教室场景：     ","permalink":"https://stevechenzy.github.io/apps/pomodoro_introduction_cn/","tags":null,"title":"专心倒计时 Pomodoro"},{"categories":["Apps","Android"],"contents":"中文说明\n  Pomodoro is an extremely simple Android App writted by me 2 years ago, for my own training session.\nDownload Download Latest Apk for your phone\nOr use your phone to scan the qr-code to download:\nnote：WeChat scanner could block the external link. please use other QR-scanner on the phone\n   Why Another countdown timer Why should we develop another pomodoro (focused timer)? The current existing Apps are too distracting. They either have too fancy outlook, keep asking for upgrade to pro version, or showing ads. That is really annoying during a learning or training session!\nHelp yourself! As a Ex-SW Engineer, this is my first Android App. While focusing on book, work or other task you should have it. For trainers, it is also a convenient coundown timer for classroom.\nWhat we need is a KISS one: Keep it Simple and Stupid. no much options. black and white.\n Usage:  Start/Pause timer: double click/tap on the screen; long press pause the timer. Stop/Cancel timer: Fling through the whole screen horizontally. (exact from left edge to right edge) Switch to predefined timers(45,30, 25, 15, 10, 7, 5, 3, 1min), on the ready state (no timer is running or paused), Fling cross the main width of screen. Adjust the timer setting: Pinch (Zoom) with 2 fingers, or scroll (one finger flip vertically).  To make it works properly, you should allow wake up permission and allow \u0026ldquo;lock screen notification\u0026rdquo;\n  Download guide video\n In a training：     ","permalink":"https://stevechenzy.github.io/apps/pomodoro_introduction/","tags":null,"title":"Pomodoro, an Android App "},{"categories":null,"contents":"东华门以北是北河沿，以南是南河沿。河，指的是筒子河。\n这是最能体现北京性格的地方，春天的玉兰、迎春、银杏，和别处是全不一样的姿态，因为金瓦红墙，紫禁城的方正威严，也因为胡同、四合院的懒散、随意。\n天蓝的时候，适合发呆，和自己的影子聊上一个下午。\n有时候，写点文字，也写写字，也会写写代码。也随性。\n","permalink":"https://stevechenzy.github.io/author/%E5%8C%97%E6%B2%B3%E6%B2%BF/","tags":null,"title":"北河沿"}]